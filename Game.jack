class Game {
  field Snake snake;
  field int numCoins;
  field Direction direction;

  constructor Game new(int argSnakeLength, int argNumCoins) {
    let snake = Snake.new(argSnakeLength, argSnakeLength + argNumCoins);
    let numCoins = argNumCoins;
    let direction = Direction.right();
    return this;
  }

  method void play() {
    do snake.setPosition(0, 0);
    do snake.draw();
    while (inProgress()) {
      if (~snake.move(direction, 100)) {
        do snake.kill(1000);
      }
    }
    return;
  }

  method void dispose() {
    return;
  }

  method boolean inProgress() {
    var char pressedKey;
    var Direction d;

    if (snake.isDead()) {
      return false;
    }

    let pressedKey = Keyboard.keyPressed();
    if (isQuitKey(pressedKey)) {
      return false;
    }

    let d = getDirection(pressedKey);
    if (~(d = null)) {
      let direction = d;
    }

    return true;
  }

  method boolean isQuitKey(char pressedKey) {
    return pressedKey = 81;  // 'Q'
  }

  method Direction getDirection(char pressedKey) {
    if (pressedKey = 130) {
      return Direction.left();
    }

    if (pressedKey = 131) {
      return Direction.up();
    }

    if (pressedKey = 132) {
      return Direction.right();
    }

    if (pressedKey = 133) {
      return Direction.down();
    }

    return null;
  }
}
